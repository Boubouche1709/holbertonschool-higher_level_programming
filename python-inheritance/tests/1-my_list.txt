>>> Mylist = __import__('1-my_list').my_list

# --- Basic test with integers ---
>>> numbers = MyList([5, 2, 9, 1])
>>> numbers.print_sorted()
[1, 2, 5, 9]
>>> numbers  # original list is not modified
[5, 2, 9, 1]

# --- Empty list ---
>>> empty = MyList([])
>>> empty.print_sorted()
[]

# --- Negative integers ---
>>> negatives = MyList([-3, -1, -7, -2])
>>> negatives.print_sorted()
[-7, -3, -2, -1]

# --- Duplicates ---
>>> duplicates = MyList([4, 2, 4, 1, 2])
>>> duplicates.print_sorted()
[1, 2, 2, 4, 4]

# --- Already sorted list ---
>>> already_sorted = MyList([1, 2, 3, 4])
>>> already_sorted.print_sorted()
[1, 2, 3, 4]

# --- Reverse order list ---
>>> reverse = MyList([9, 7, 5, 3])
>>> reverse.print_sorted()
[3, 5, 7, 9]
>>> reverse  # original list remains unchanged
[9, 7, 5, 3]

# --- Single element ---
>>> single = MyList([42])
>>> single.print_sorted()
[42]

# --- All identical elements ---
>>> same = MyList([5, 5, 5])
>>> same.print_sorted()
[5, 5, 5]

# --- Floats ---
>>> floats = MyList([3.2, 1.5, 4.8, 2.1])
>>> floats.print_sorted()
[1.5, 2.1, 3.2, 4.8]

# --- Mixed integers and floats ---
>>> mixed = MyList([3, 1.2, 5, 2.5])
>>> mixed.print_sorted()
[1.2, 2.5, 3, 5]

# --- Strings ---
>>> words = MyList(["banana", "apple", "cherry"])
>>> words.print_sorted()
['apple', 'banana', 'cherry']

# --- General checks ---
>>> isinstance(numbers, list)
True
>>> issubclass(MyList, list)
True
>>> hasattr(numbers, "print_sorted")
True
